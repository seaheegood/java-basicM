2-1. 기본형 vs 참조형 1 - 시작

*자바에서 참조형은 정말 중요*

변수의 데이터 타입을 가장 크게 보면 기본형과 참조형으로 분류할 수 있다.

- 사용하는 값을 변수에 직접 넣을 수 있는 기본형(Primitive Type) = int, long, double, boolean 처럼 변수에 사용할 값을 직접 넣을 수 있는 데이터 타입

- Student stduent1 과 같이 객체가 저장된 메모리의 위치를 가르키는 참조값을 넣을 수 있는 참조형(Reference Type) = Student student1, int[] students 와 같이 데이터에 접근하기 위해 참조(주소)를 저장하는 데이터 타입

쉽게말해,

기본형 변수 - 직접 사용할 수 있는 값이 들어감

참조형 변수 - 위치(참조값 혹은 주소)가 들어감 *결국 참조형 변수를 통해서 무언가 하려면 참조값을 통해 해당 위치로 이동해야만한다.

	** 참조형에는 객체와 배열이 있다. 	- 객체는 .(dot)을 통해서 메모리 상에 생성된 객체를 찾아가서 사용
	- 배열은 [] 를 통해서 메모리 상에 생성된 배열을 찾아가서 사용

쉽게 이해하기

기본형을 제외한 나머지는 모두 참조형이다.
- 기본형은 소문자로 시작한다.
    - 자바가 기본 제공하는 데이터 타입, 개발자가 새로 정의할 수 없다.
- 클래스는 대문자로 시작한다.
    - 클래스는 모두 참조형이다.
** String 은 살짝 특별하다. String 도 클래스라서, 참조형이다.

2-2. 기본형 vs 참조형 1 - 변수 대입

대원칙: 자바는 항상 변수의 값을 복사해서 대입한다

기본형, 참조형 모두 항상 변수에 있는 값을 복사해서 대입
- 기본형 : 변수에 들어 있는 실제 사용하는 값을 복사해서 대입
- 참조형 : *변수에 들어 있는 참조값을 복사해서 대입
	** 쉽게 얘기해서 실제 건물이 복사 되는 것이 아닌, 건물의 위치가 복사되는 거다. 같은 건물을 찾아가는 방법이 하나 늘은 것일 뿐

**Data dataB = dataA 라고 했을 때 변수에 들어있는 값을 복사해서 사용한다. 그런데 그 값이 참조값이다.
-> 따라서 dataA 와 dataB 는 같은 참조값을 가지게 되고, 두 변수는 같은 객체 인스턴스를 참조하게 된다.**

2-3. 기본형 vs 참조형3 - 메서드 호출

대원칙 : 자바는 항상 변수의 값을 복사해서 대입한다.

**메서드 호출도 마찬가지이다. 메서드를 호출할 때 사용하는 매개변수(parameter)도 결국 변수이다.
-> 따라서 메서드를 호출할 때 매개변수에 값을 전달하는 것도 값을 복사해서 전달한다.**

기본형과 참조형의 메서드 호출
자바에서 메서드의 매개변수는 항상 값에 의해 전달된다. 그러나 이값이 실제 값이나, 참조값이냐에 따라 동작이 달라진다.
- 기본형 : 메서드로 기본형 데이터를 전달하면, 해당 값이 복사되어 전달된다. 이 경우, 메서드 내부에서 매개변수의 값을 변경해도, 호출자의 변수값에는 영향이 없다.
- 참조형 : 메서드로 참조형 데이터를 전달하면, 참조값이 복사되어 잔달된다. 이 경우, 메서드 내부에서 매개변수로 전달된 객체의 멤버 변수를 변경하면, 호출자의 객체도 변경된다. 왜냐면 같은 인스턴스


2-5. 변수와 초기화

변수의 종류

- 벰버 변수(필드) : 클래스에 선언

- 지역 변수: 메서드에 선언, 매개 변수도 지역 변수의 한 종류
    - 지역 변수는 특정 지역에서만 사용되는 변수라는 뜻이다. ex) 메서드 블록 내에서만 사용

변수의 값 초기화

- 벰버 변수 : 자동 초기화
    - 인스턴스의 멤버 변수는 인스턴스를 생성할 때 자동으로 초기화된다.
    - int = 0, boolean = false, 참조형 = null
    - 개발자가 초기값을 직접 지정할 수 있다.
- 지역 변수 : 수동 초기화
    - 지역 변수는 항상 직접 초기화해야한다.


2-6. null

**null 이란, 값이 존재하지 않는, 없다는 뜻이다.**